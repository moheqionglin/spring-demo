<?xml version="1.0" encoding="UTF-8"?>
<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd">

<!--    id 标识符，添加到生成文件名称的后缀符。如果指定 id 的话，目标文件则是 ${artifactId}-${id}.tar.gz-->
    <id>bin-tgz</id>

<!-- 支持的打包格式有zip、tar、tar.gz (or tgz)、tar.bz2 (or tbz2)、jar、dir、war，可以同时指定多个打包格式-->
    <formats>
        <format>tar.gz</format>
    </formats>

    <!--   tar -zxvf 以后的目录名字-->
    <baseDirectory>devops</baseDirectory>
<!--    <includeBaseDirectory>true</includeBaseDirectory>-->
<!--
        用来定制工程依赖 jar 包的打包方式，核心元素如下：
        outputDirectory String 指定包依赖目录，该目录是相对于根目录
        includes/include*   List<String>	包含依赖
        excludes/exclude*   List<String>	排除依赖
 -->
    <dependencySets>
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <outputDirectory>lib</outputDirectory>
            <scope>runtime</scope>
            <excludes>
                <exclude>junit*</exclude>
            </excludes>
        </dependencySet>
    </dependencySets>

<!--
    管理一组文件的存放位置，核心元素如下
     outputDirectory String 指定包依赖目录，该目录是相对于根目录
     includes/include*   List<String>	包含依赖
     excludes/exclude*   List<String>	排除依赖

-->
    <fileSets>
<!--        相当于 mv src/deploy bin, chmod bin 0755-->
		<fileSet>
			<directory>src/deploy</directory>
            <includes>
                <include>*.conf</include>
                <include>*.sh</include>
            </includes>
			<outputDirectory>deploy</outputDirectory>
			<fileMode>0755</fileMode>
			<directoryMode>0755</directoryMode>
		</fileSet>
<!--        相当于 mv src/config config, chmod bin 0755-->
		<fileSet>
			<directory>src/config</directory>
            <includes>
                <include>*.properties</include>
            </includes>
			<outputDirectory>config</outputDirectory>
		</fileSet>
        <fileSet>
            <directory>src/run</directory>
            <outputDirectory>run</outputDirectory>
        </fileSet>
    </fileSets>
</assembly>
