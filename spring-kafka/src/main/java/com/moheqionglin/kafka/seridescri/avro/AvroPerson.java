/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.moheqionglin.kafka.seridescri.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AvroPerson extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 573889980729893903L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroPerson\",\"namespace\":\"com.moheqionglin.kafka.seridescri.avro\",\"fields\":[{\"name\":\"id\",\"type\":[\"int\",\"null\"],\"doc\":\"id\"},{\"name\":\"name\",\"type\":[\"string\",\"null\"],\"doc\":\"姓名\"},{\"name\":\"age\",\"type\":[\"long\",\"null\"],\"doc\":\"年龄\"},{\"name\":\"lon\",\"type\":[\"float\",\"null\"],\"doc\":\"经度\"},{\"name\":\"success\",\"type\":[\"boolean\",\"null\"],\"doc\":\"成功\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AvroPerson> ENCODER =
      new BinaryMessageEncoder<AvroPerson>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AvroPerson> DECODER =
      new BinaryMessageDecoder<AvroPerson>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AvroPerson> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AvroPerson> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AvroPerson> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AvroPerson>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AvroPerson to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AvroPerson from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AvroPerson instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AvroPerson fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** id */
  @Deprecated public java.lang.Integer id;
  /** 姓名 */
  @Deprecated public java.lang.CharSequence name;
  /** 年龄 */
  @Deprecated public java.lang.Long age;
  /** 经度 */
  @Deprecated public java.lang.Float lon;
  /** 成功 */
  @Deprecated public java.lang.Boolean success;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AvroPerson() {}

  /**
   * All-args constructor.
   * @param id id
   * @param name 姓名
   * @param age 年龄
   * @param lon 经度
   * @param success 成功
   */
  public AvroPerson(java.lang.Integer id, java.lang.CharSequence name, java.lang.Long age, java.lang.Float lon, java.lang.Boolean success) {
    this.id = id;
    this.name = name;
    this.age = age;
    this.lon = lon;
    this.success = success;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return name;
    case 2: return age;
    case 3: return lon;
    case 4: return success;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Integer)value$; break;
    case 1: name = (java.lang.CharSequence)value$; break;
    case 2: age = (java.lang.Long)value$; break;
    case 3: lon = (java.lang.Float)value$; break;
    case 4: success = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return id
   */
  public java.lang.Integer getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * id
   * @param value the value to set.
   */
  public void setId(java.lang.Integer value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return 姓名
   */
  public java.lang.CharSequence getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * 姓名
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'age' field.
   * @return 年龄
   */
  public java.lang.Long getAge() {
    return age;
  }


  /**
   * Sets the value of the 'age' field.
   * 年龄
   * @param value the value to set.
   */
  public void setAge(java.lang.Long value) {
    this.age = value;
  }

  /**
   * Gets the value of the 'lon' field.
   * @return 经度
   */
  public java.lang.Float getLon() {
    return lon;
  }


  /**
   * Sets the value of the 'lon' field.
   * 经度
   * @param value the value to set.
   */
  public void setLon(java.lang.Float value) {
    this.lon = value;
  }

  /**
   * Gets the value of the 'success' field.
   * @return 成功
   */
  public java.lang.Boolean getSuccess() {
    return success;
  }


  /**
   * Sets the value of the 'success' field.
   * 成功
   * @param value the value to set.
   */
  public void setSuccess(java.lang.Boolean value) {
    this.success = value;
  }

  /**
   * Creates a new AvroPerson RecordBuilder.
   * @return A new AvroPerson RecordBuilder
   */
  public static com.moheqionglin.kafka.seridescri.avro.AvroPerson.Builder newBuilder() {
    return new com.moheqionglin.kafka.seridescri.avro.AvroPerson.Builder();
  }

  /**
   * Creates a new AvroPerson RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroPerson RecordBuilder
   */
  public static com.moheqionglin.kafka.seridescri.avro.AvroPerson.Builder newBuilder(com.moheqionglin.kafka.seridescri.avro.AvroPerson.Builder other) {
    if (other == null) {
      return new com.moheqionglin.kafka.seridescri.avro.AvroPerson.Builder();
    } else {
      return new com.moheqionglin.kafka.seridescri.avro.AvroPerson.Builder(other);
    }
  }

  /**
   * Creates a new AvroPerson RecordBuilder by copying an existing AvroPerson instance.
   * @param other The existing instance to copy.
   * @return A new AvroPerson RecordBuilder
   */
  public static com.moheqionglin.kafka.seridescri.avro.AvroPerson.Builder newBuilder(com.moheqionglin.kafka.seridescri.avro.AvroPerson other) {
    if (other == null) {
      return new com.moheqionglin.kafka.seridescri.avro.AvroPerson.Builder();
    } else {
      return new com.moheqionglin.kafka.seridescri.avro.AvroPerson.Builder(other);
    }
  }

  /**
   * RecordBuilder for AvroPerson instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroPerson>
    implements org.apache.avro.data.RecordBuilder<AvroPerson> {

    /** id */
    private java.lang.Integer id;
    /** 姓名 */
    private java.lang.CharSequence name;
    /** 年龄 */
    private java.lang.Long age;
    /** 经度 */
    private java.lang.Float lon;
    /** 成功 */
    private java.lang.Boolean success;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.moheqionglin.kafka.seridescri.avro.AvroPerson.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.age)) {
        this.age = data().deepCopy(fields()[2].schema(), other.age);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.lon)) {
        this.lon = data().deepCopy(fields()[3].schema(), other.lon);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.success)) {
        this.success = data().deepCopy(fields()[4].schema(), other.success);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing AvroPerson instance
     * @param other The existing instance to copy.
     */
    private Builder(com.moheqionglin.kafka.seridescri.avro.AvroPerson other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.age)) {
        this.age = data().deepCopy(fields()[2].schema(), other.age);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.lon)) {
        this.lon = data().deepCopy(fields()[3].schema(), other.lon);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.success)) {
        this.success = data().deepCopy(fields()[4].schema(), other.success);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * id
      * @return The value.
      */
    public java.lang.Integer getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * id
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.moheqionglin.kafka.seridescri.avro.AvroPerson.Builder setId(java.lang.Integer value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * id
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * id
      * @return This builder.
      */
    public com.moheqionglin.kafka.seridescri.avro.AvroPerson.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * 姓名
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * 姓名
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.moheqionglin.kafka.seridescri.avro.AvroPerson.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * 姓名
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * 姓名
      * @return This builder.
      */
    public com.moheqionglin.kafka.seridescri.avro.AvroPerson.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'age' field.
      * 年龄
      * @return The value.
      */
    public java.lang.Long getAge() {
      return age;
    }


    /**
      * Sets the value of the 'age' field.
      * 年龄
      * @param value The value of 'age'.
      * @return This builder.
      */
    public com.moheqionglin.kafka.seridescri.avro.AvroPerson.Builder setAge(java.lang.Long value) {
      validate(fields()[2], value);
      this.age = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'age' field has been set.
      * 年龄
      * @return True if the 'age' field has been set, false otherwise.
      */
    public boolean hasAge() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'age' field.
      * 年龄
      * @return This builder.
      */
    public com.moheqionglin.kafka.seridescri.avro.AvroPerson.Builder clearAge() {
      age = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'lon' field.
      * 经度
      * @return The value.
      */
    public java.lang.Float getLon() {
      return lon;
    }


    /**
      * Sets the value of the 'lon' field.
      * 经度
      * @param value The value of 'lon'.
      * @return This builder.
      */
    public com.moheqionglin.kafka.seridescri.avro.AvroPerson.Builder setLon(java.lang.Float value) {
      validate(fields()[3], value);
      this.lon = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'lon' field has been set.
      * 经度
      * @return True if the 'lon' field has been set, false otherwise.
      */
    public boolean hasLon() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'lon' field.
      * 经度
      * @return This builder.
      */
    public com.moheqionglin.kafka.seridescri.avro.AvroPerson.Builder clearLon() {
      lon = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'success' field.
      * 成功
      * @return The value.
      */
    public java.lang.Boolean getSuccess() {
      return success;
    }


    /**
      * Sets the value of the 'success' field.
      * 成功
      * @param value The value of 'success'.
      * @return This builder.
      */
    public com.moheqionglin.kafka.seridescri.avro.AvroPerson.Builder setSuccess(java.lang.Boolean value) {
      validate(fields()[4], value);
      this.success = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'success' field has been set.
      * 成功
      * @return True if the 'success' field has been set, false otherwise.
      */
    public boolean hasSuccess() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'success' field.
      * 成功
      * @return This builder.
      */
    public com.moheqionglin.kafka.seridescri.avro.AvroPerson.Builder clearSuccess() {
      success = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AvroPerson build() {
      try {
        AvroPerson record = new AvroPerson();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Integer) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.age = fieldSetFlags()[2] ? this.age : (java.lang.Long) defaultValue(fields()[2]);
        record.lon = fieldSetFlags()[3] ? this.lon : (java.lang.Float) defaultValue(fields()[3]);
        record.success = fieldSetFlags()[4] ? this.success : (java.lang.Boolean) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AvroPerson>
    WRITER$ = (org.apache.avro.io.DatumWriter<AvroPerson>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AvroPerson>
    READER$ = (org.apache.avro.io.DatumReader<AvroPerson>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.id == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeInt(this.id);
    }

    if (this.name == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.name);
    }

    if (this.age == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeLong(this.age);
    }

    if (this.lon == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeFloat(this.lon);
    }

    if (this.success == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeBoolean(this.success);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 0) {
        in.readNull();
        this.id = null;
      } else {
        this.id = in.readInt();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.name = null;
      } else {
        this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.age = null;
      } else {
        this.age = in.readLong();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.lon = null;
      } else {
        this.lon = in.readFloat();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.success = null;
      } else {
        this.success = in.readBoolean();
      }

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 0) {
            in.readNull();
            this.id = null;
          } else {
            this.id = in.readInt();
          }
          break;

        case 1:
          if (in.readIndex() != 0) {
            in.readNull();
            this.name = null;
          } else {
            this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);
          }
          break;

        case 2:
          if (in.readIndex() != 0) {
            in.readNull();
            this.age = null;
          } else {
            this.age = in.readLong();
          }
          break;

        case 3:
          if (in.readIndex() != 0) {
            in.readNull();
            this.lon = null;
          } else {
            this.lon = in.readFloat();
          }
          break;

        case 4:
          if (in.readIndex() != 0) {
            in.readNull();
            this.success = null;
          } else {
            this.success = in.readBoolean();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










